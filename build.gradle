buildscript {
  repositories {
    jcenter()
  }
}

plugins {
  id "com.jfrog.bintray" version "1.8.4"
  id "maven-publish"
  id "java"
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compileOnly 'com.google.auto.service:auto-service:1.0-rc5'
  annotationProcessor 'com.google.auto.service:auto-service:1.0-rc5'
  compile 'com.squareup:javapoet:1.11.1'

  testCompile 'com.google.testing.compile:compile-testing:0.16'
  testCompile 'junit:junit:4.12'
}

group = 'io.github.high-stakes'
version = '0.1.1'

ext {
  licenseName = 'Apache-2.0'
  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  developerId = 'high-stakes'
  developerUrl = 'https://github.com/high-stakes'
  projectUrl = 'https://github.com/high-stakes/AutoInterface'
  projectName = 'AutoInterface'
  projectDescription = 'Java annotation processor to generate interfaces.'
  repoName = 'github-maven'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

def pomConfig = {
  licenses {
    license {
      name project.licenseName
      url project.licenseUrl
    }
  }
  developers {
    developer {
      id project.developerId
      url project.developerUrl
    }
  }
  scm {
    url project.projectUrl
  }
}

publishing {
  publications {
    mavenPublication(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
      pom.withXml {
        def root = asNode()
        root.appendNode('description', project.projectDescription)
        root.appendNode('name', project.projectName)
        root.appendNode('url', project.projectUrl)
        root.children().last() + pomConfig
      }
    }
  }
}

//./gradlew bintrayUpload -Dbintray.user=<YOUR_USER_NAME> -Dbintray.key=<YOUR_API_KEY>
bintray {
  user = System.getProperty('bintray.user')
  key = System.getProperty('bintray.key')
  publications = ['mavenPublication']
  pkg {
    repo = project.repoName
    name = project.projectName
    userOrg = project.developerId
    licenses = [project.licenseName]
    vcsUrl = project.projectUrl
    version {
      name = project.version
      desc = "${project.projectName}: ${project.version}"
      released  = new Date()
    }
  }
}